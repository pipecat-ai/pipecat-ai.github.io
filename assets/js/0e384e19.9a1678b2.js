"use strict";(self.webpackChunkpipecat_docs=self.webpackChunkpipecat_docs||[]).push([[976],{619:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var o=t(4848),a=t(8453);const i={sidebar_position:2},r="Getting Started",s={id:"intro",title:"Getting Started",description:"Let's start by getting Pipecat installed and running your first example app.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",next:{title:"Understanding Bots",permalink:"/docs/category/understanding-bots"}},l={},d=[{value:"Accounts you&#39;ll need (or want)",id:"accounts-youll-need-or-want",level:2},{value:"Installing the module",id:"installing-the-module",level:2},{value:"Preparing your environment",id:"preparing-your-environment",level:2},{value:"Running your first example",id:"running-your-first-example",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"getting-started",children:"Getting Started"}),"\n",(0,o.jsx)(n.p,{children:"Let's start by getting Pipecat installed and running your first example app."}),"\n",(0,o.jsx)(n.h2,{id:"accounts-youll-need-or-want",children:"Accounts you'll need (or want)"}),"\n",(0,o.jsx)(n.p,{children:"While you can use Pipecat without them, there are a few third-party services you'll probably want to use with Pipecat. We recommend these to start, since they're easy to sign up and get started for free or low cost:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://dashboard.daily.co/u/signup",children:"Daily.co"})," for your transport layer. Daily uses WebRTC to exchange real-time audio and video between the bot and the user."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://platform.openai.com/signup",children:"OpenAI"})," gets you ChatGPT for an LLM, and DALL-E for image generation."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://elevenlabs.io/sign-up",children:"Eleven Labs"})," or ",(0,o.jsx)(n.a,{href:"https://console.deepgram.com/signup",children:"Deepgram"})," for text-to-speech."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"installing-the-module",children:"Installing the module"}),"\n",(0,o.jsxs)(n.p,{children:["To start, we recommend using a virtual environment, or ",(0,o.jsx)(n.code,{children:"venv"}),", inside a new directory:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"mkdir pipecat-test\ncd pipecat-test\npython3 -m venv env\nsource env/bin/activate\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"pipecat"})," Python module has a lot of optional dependencies, including some pretty big AI libraries. The module uses a lot of optional dependencies to allow you to only install what you need. For example, to install ",(0,o.jsx)(n.code,{children:"pipecat"})," along with support for the services above, run this command (or add it to your ",(0,o.jsx)(n.code,{children:"requirements.txt"}),"):"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"pip install pipecat-ai[daily,openai]\n"})}),"\n",(0,o.jsx)(n.p,{children:"In order to use local audio on MacOS, you'll need to do one more thing:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"brew install portaudio\n"})}),"\n",(0,o.jsx)(n.admonition,{title:"No Dependencies Required",type:"tip",children:(0,o.jsx)(n.p,{children:"Some services, like Eleven Labs and Deepgram, just use built-in Python functionality for REST requests, so they don't have anything extra to install."})}),"\n",(0,o.jsxs)(n.p,{children:["You can always install other dependencies later. For the full list, look for the ",(0,o.jsx)(n.code,{children:"[project.optional-dependencies]"})," section in ",(0,o.jsx)(n.a,{href:"https://github.com/pipecat-ai/pipecat/blob/main/pyproject.toml",children:"pyproject.toml"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"preparing-your-environment",children:"Preparing your environment"}),"\n",(0,o.jsxs)(n.p,{children:["Now that you've got the module installed, you'll need to set some environment variables for the example app to use. For this next part, we'll presume you're using the ",(0,o.jsx)(n.a,{href:"https://github.com/pipecat-ai/pipecat/blob/main/examples/foundational/01-say-one-thing.py",children:'"Say One Thing"'})," example app with its default services."]}),"\n",(0,o.jsxs)(n.p,{children:["Start by heading over to ",(0,o.jsx)(n.a,{href:"https://dashboard.daily.co/rooms",children:"dashboard.daily.co/rooms"})," and creating a new room. You can leave everything as-is in the room creation screen, or change anything you want. (Emoji reactions and advanced chat are fun.) Make note of the name of the room you created, as well as your account domain; you'll need it in the form ",(0,o.jsx)(n.code,{children:"https://YOURDOMAIN.daily.co/YOURROOM"})," in the following steps."]}),"\n",(0,o.jsxs)(n.p,{children:["While you're there, stop by ",(0,o.jsx)(n.a,{href:"https://dashboard.daily.co/developers",children:"dashboard.daily.co/developers"})," and copy your API key."]}),"\n",(0,o.jsxs)(n.p,{children:["Next, head over to ",(0,o.jsx)(n.a,{href:"https://elevenlabs.io/app/voice-lab",children:"Eleven Labs"})," and find a voice you want to use. Make note of the Voice ID, and get your API key from your user avatar on the bottom left."]}),"\n",(0,o.jsx)(n.h2,{id:"running-your-first-example",children:"Running your first example"}),"\n",(0,o.jsxs)(n.p,{children:["Download the ",(0,o.jsx)(n.a,{href:"https://github.com/pipecat-ai/pipecat/raw/main/examples/foundational/01-say-one-thing.py",children:'"Say One Thing"'})," example file from the ",(0,o.jsxs)(n.a,{href:"https://github.com/pipecat-ai/pipecat/blob/main/examples/foundational/01-say-one-thing.py",children:[(0,o.jsx)(n.code,{children:"pipecat"})," repo"]}),", and save it to a new folder somewhere. In that same folder, create a file named ",(0,o.jsx)(n.code,{children:".env"}),", and add values for the following environment variables:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"DAILY_SAMPLE_ROOM_URL=https://YOURDOMAIN.daily.co/YOURROOM # with the real domain and room name, of course\nDAILY_API_KEY=7df3...\nELEVENLABS_API_KEY=aeb1...\nELEVENLABS_VOICE_ID=ErXw...\n"})}),"\n",(0,o.jsx)(n.p,{children:"Open your Daily room URL in a browser tab. Once you've joined the room, run the example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"python 01-say-one-thing.py\n"})}),"\n",(0,o.jsx)(n.p,{children:"If all goes well, you should see another participant join the room, greet you by name, and disconnect."}),"\n",(0,o.jsx)(n.p,{children:"Next, we'll talk about the architecture of Pipecat bots, so you can build your own!"})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var o=t(6540);const a={},i=o.createContext(a);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);